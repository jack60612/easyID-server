apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: core
  name: {{ .Values.core.name }}
spec:
  replicas: {{ .Values.core.replicas }}
  selector:
    matchLabels:
      app: core
  template:
    metadata:
      labels:
        app: core
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - core
                topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ include "easyid-kubernetes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - env:
            - name: ML_PORT
              value: '{{ .Values.core.port }}'
            - name: UWSGI_PROCESSES
              value: '{{ .Values.core.uwsgi_processes }}'
            - name: UWSGI_THREADS
              value: '{{ .Values.core.uwsgi_threads }}'
            - name: IMG_LENGTH_LIMIT
              value: '{{ .Values.core.max_detect_size }}'
          image: '{{ .Values.global.internalRegistry }}{{ .Values.core.repository }}:{{ .Values.core.tag }}'
          imagePullPolicy: {{ .Values.core.pullPolicy }}   
          ports:
          - containerPort: 3000
          name: {{ .Values.core.name }}
          resources:
            limits:
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.core.name }}
spec:
  type: ClusterIP
  selector:
      app: core
  ports:
    - port: {{ .Values.core.port }}
      targetPort: 3000
