# Default values for easyid-kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
global:
  registry: exadel/
  internalRegistry: ghcr.io/jack60612/
  max_file_size: 5MB  # update ingress rules if you change the values below
  max_request_size: 10M
  connection_timeout: 10000
  read_timeout: 60000
  domain_name: easyid-server.local
  file_storage_directory: /opt/easyID # for linux systems
  # file_storage_directory: /run/desktop/mnt/host/c/easyID  # For Windows / WSL2

postgres:
  repository: compreface-postgres-db
  pullPolicy: Always
  tag: 1.1.0
  db_name: easyidmain
  db_port: 5432
  db_password: cfadmin1 # TODO: change to random password
  db_user: cfadmin
  name: easyid-postgres-db

admin: # Admin Portal
  repository: compreface-admin
  pullPolicy: Always
  tag: 1.1.0
  port: 8080
  replicas: 1
  javaOpts: -Xmx8g
  emailFrom: ''
  emailHost: ''
  emailUsername: ''
  emailPassword: ''
  enableEmail: 'false'
  name: compreface-admin

api: # API for Face Recognition
  repository: compreface-api
  pullPolicy: Always
  tag: 1.1.0
  port: 8080
  replicas: 1
  javaOpts: -Xmx8g
  name: compreface-api

fe: # Load Balancer for API & UI
  repository: compreface-fe
  pullPolicy: Always
  tag: 1.1.0
  port: 8000
  replicas: 1
  name: compreface-ui

core: # Core for Face Recognition, connects to API only.
  repository: easyid-core
  pullPolicy: Always
  tag: mobilenet-gpu
  port: 3000
  replicas: 1
  uwsgi_processes: 2
  uwsgi_threads: 1
  max_detect_size: 640
  name: compreface-core
pyapi: # python based custom api
  repository: easyid-api
  pullPolicy: Always
  tag: main
  port: 8080
  replicas: 1
  name: easyid-py-api
  python_db_name: pydatamain
mainNginx: # sits in front of everything
  repository: easyid-nginx
  pullPolicy: Always
  tag: main
  port: 80
  ssl_port: 443
  replicas: 1
  name: easyid-nginx

imagePullSecrets: 
 - name: ghregistrycred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {"easyid": "true"}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "easyid"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

ingress:
  enabled: true
  className: "nginx"
  overrideName: "easyid-nginx"
  annotations: 
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "10M"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60000"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: easyid-server.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: easyid-nginx
              port:
                number: 443
  tls:
    - secretName: easyid-tls
      hosts:
        - easyid-server.local
        - localhost

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
